Best Hyperparameters for Each Model:

Linear Models:
--------------------------------------------------

Linear Regression:
{'memory': None,
 'model': LinearRegression(),
 'model__copy_X': True,
 'model__fit_intercept': True,
 'model__n_jobs': None,
 'model__positive': False,
 'preprocessing': Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures()),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))]),
 'preprocessing__memory': None,
 'preprocessing__null_values': ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence']),
 'preprocessing__null_values__columns': ['acousticness',
                                         'danceability',
                                         'energy',
                                         'liveness',
                                         'speechiness',
                                         'tempo',
                                         'valence'],
 'preprocessing__null_values__input_value': -1,
 'preprocessing__null_values__output_value': nan,
 'preprocessing__steps': [('null_values',
                           ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence'])),
                          ('transformation',
                           ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures()),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]))],
 'preprocessing__transformation': ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures()),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]),
 'preprocessing__transformation__album_encoding': Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__album_encoding__encoding': AlbumNameEncoder(),
 'preprocessing__transformation__album_encoding__memory': None,
 'preprocessing__transformation__album_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__album_encoding__scaling__copy': True,
 'preprocessing__transformation__album_encoding__scaling__with_mean': True,
 'preprocessing__transformation__album_encoding__scaling__with_std': True,
 'preprocessing__transformation__album_encoding__steps': [('encoding',
                                                           AlbumNameEncoder()),
                                                          ('scaling',
                                                           StandardScaler())],
 'preprocessing__transformation__album_encoding__verbose': False,
 'preprocessing__transformation__artist_encoding': Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_encoding__encoding': FrequencyEncoder(),
 'preprocessing__transformation__artist_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__artist_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__artist_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__artist_encoding__imputation__copy': True,
 'preprocessing__transformation__artist_encoding__imputation__fill_value': None,
 'preprocessing__transformation__artist_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__artist_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__artist_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__artist_encoding__memory': None,
 'preprocessing__transformation__artist_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_encoding__steps': [('encoding',
                                                            FrequencyEncoder()),
                                                           ('imputation',
                                                            SimpleImputer()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__artist_encoding__verbose': False,
 'preprocessing__transformation__artist_popularity_encoding': Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_popularity_encoding__encoding': ArtistPopularityEncoder(),
 'preprocessing__transformation__artist_popularity_encoding__encoding__strategy': 'both',
 'preprocessing__transformation__artist_popularity_encoding__memory': None,
 'preprocessing__transformation__artist_popularity_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_popularity_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_popularity_encoding__steps': [('encoding',
                                                                       ArtistPopularityEncoder()),
                                                                      ('scaling',
                                                                       StandardScaler())],
 'preprocessing__transformation__artist_popularity_encoding__verbose': False,
 'preprocessing__transformation__follower_encoding': Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__follower_encoding__encoding': FollowerCountEncoder(),
 'preprocessing__transformation__follower_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__follower_encoding__memory': None,
 'preprocessing__transformation__follower_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__follower_encoding__scaling__copy': True,
 'preprocessing__transformation__follower_encoding__scaling__with_mean': True,
 'preprocessing__transformation__follower_encoding__scaling__with_std': True,
 'preprocessing__transformation__follower_encoding__steps': [('encoding',
                                                              FollowerCountEncoder()),
                                                             ('scaling',
                                                              StandardScaler())],
 'preprocessing__transformation__follower_encoding__verbose': False,
 'preprocessing__transformation__force_int_remainder_cols': True,
 'preprocessing__transformation__genres_encoding': Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
 'preprocessing__transformation__genres_encoding__encoding': GenreEncoder(),
 'preprocessing__transformation__genres_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__genres_encoding__memory': None,
 'preprocessing__transformation__genres_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__genres_encoding__scaling__copy': True,
 'preprocessing__transformation__genres_encoding__scaling__with_mean': True,
 'preprocessing__transformation__genres_encoding__scaling__with_std': True,
 'preprocessing__transformation__genres_encoding__steps': [('encoding',
                                                            GenreEncoder()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__genres_encoding__verbose': False,
 'preprocessing__transformation__n_jobs': None,
 'preprocessing__transformation__numeric_processing': Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__numeric_processing__imputation': SimpleImputer(),
 'preprocessing__transformation__numeric_processing__imputation__add_indicator': False,
 'preprocessing__transformation__numeric_processing__imputation__copy': True,
 'preprocessing__transformation__numeric_processing__imputation__fill_value': None,
 'preprocessing__transformation__numeric_processing__imputation__keep_empty_features': False,
 'preprocessing__transformation__numeric_processing__imputation__missing_values': nan,
 'preprocessing__transformation__numeric_processing__imputation__strategy': 'mean',
 'preprocessing__transformation__numeric_processing__memory': None,
 'preprocessing__transformation__numeric_processing__polynomials': PolynomialFeatures(),
 'preprocessing__transformation__numeric_processing__polynomials__degree': 2,
 'preprocessing__transformation__numeric_processing__polynomials__include_bias': True,
 'preprocessing__transformation__numeric_processing__polynomials__interaction_only': False,
 'preprocessing__transformation__numeric_processing__polynomials__order': 'C',
 'preprocessing__transformation__numeric_processing__scaling': StandardScaler(),
 'preprocessing__transformation__numeric_processing__scaling__copy': True,
 'preprocessing__transformation__numeric_processing__scaling__with_mean': True,
 'preprocessing__transformation__numeric_processing__scaling__with_std': True,
 'preprocessing__transformation__numeric_processing__steps': [('imputation',
                                                               SimpleImputer()),
                                                              ('polynomials',
                                                               PolynomialFeatures()),
                                                              ('scaling',
                                                               StandardScaler())],
 'preprocessing__transformation__numeric_processing__verbose': False,
 'preprocessing__transformation__onehot_encoding': OneHotEncoder(sparse_output=False),
 'preprocessing__transformation__onehot_encoding__categories': 'auto',
 'preprocessing__transformation__onehot_encoding__drop': None,
 'preprocessing__transformation__onehot_encoding__dtype': <class 'numpy.float64'>,
 'preprocessing__transformation__onehot_encoding__feature_name_combiner': 'concat',
 'preprocessing__transformation__onehot_encoding__handle_unknown': 'error',
 'preprocessing__transformation__onehot_encoding__max_categories': None,
 'preprocessing__transformation__onehot_encoding__min_frequency': None,
 'preprocessing__transformation__onehot_encoding__sparse_output': False,
 'preprocessing__transformation__remainder': 'drop',
 'preprocessing__transformation__sparse_threshold': 0.3,
 'preprocessing__transformation__transformer_weights': None,
 'preprocessing__transformation__transformers': [('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
                                                  ['key']),
                                                 ('artist_encoding',
                                                  Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
                                                  ['artist_name']),
                                                 ('album_encoding',
                                                  Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['album_name']),
                                                 ('follower_encoding',
                                                  Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_followers']),
                                                 ('genres_encoding',
                                                  Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
                                                  ['artist_genres']),
                                                 ('artist_popularity_encoding',
                                                  Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures()),
                ('scaling', StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms',
                                                   'energy',
                                                   'instrumentalness',
                                                   'liveness',
                                                   'loudness',
                                                   'speechiness',
                                                   'tempo',
                                                   'time_signature',
                                                   'valence',
                                                   'year'])],
 'preprocessing__transformation__trigonometric_encoding': Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
 'preprocessing__transformation__trigonometric_encoding__encoding': CircleOfFifthsEncoding(),
 'preprocessing__transformation__trigonometric_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__trigonometric_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__copy': True,
 'preprocessing__transformation__trigonometric_encoding__imputation__fill_value': None,
 'preprocessing__transformation__trigonometric_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__trigonometric_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__trigonometric_encoding__memory': None,
 'preprocessing__transformation__trigonometric_encoding__steps': [('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   SimpleImputer())],
 'preprocessing__transformation__trigonometric_encoding__verbose': False,
 'preprocessing__transformation__verbose': False,
 'preprocessing__transformation__verbose_feature_names_out': True,
 'preprocessing__verbose': False,
 'steps': [('preprocessing',
            Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures()),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))])),
           ('model', LinearRegression())],
 'verbose': False}

Ridge Regression:
{'memory': None,
 'model': Ridge(alpha=0.0019630406500402726),
 'model__alpha': 0.0019630406500402726,
 'model__copy_X': True,
 'model__fit_intercept': True,
 'model__max_iter': None,
 'model__positive': False,
 'model__random_state': None,
 'model__solver': 'auto',
 'model__tol': 0.0001,
 'preprocessing': Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures()),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))]),
 'preprocessing__memory': None,
 'preprocessing__null_values': ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence']),
 'preprocessing__null_values__columns': ['acousticness',
                                         'danceability',
                                         'energy',
                                         'liveness',
                                         'speechiness',
                                         'tempo',
                                         'valence'],
 'preprocessing__null_values__input_value': -1,
 'preprocessing__null_values__output_value': nan,
 'preprocessing__steps': [('null_values',
                           ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence'])),
                          ('transformation',
                           ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures()),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]))],
 'preprocessing__transformation': ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures()),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]),
 'preprocessing__transformation__album_encoding': Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__album_encoding__encoding': AlbumNameEncoder(),
 'preprocessing__transformation__album_encoding__memory': None,
 'preprocessing__transformation__album_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__album_encoding__scaling__copy': True,
 'preprocessing__transformation__album_encoding__scaling__with_mean': True,
 'preprocessing__transformation__album_encoding__scaling__with_std': True,
 'preprocessing__transformation__album_encoding__steps': [('encoding',
                                                           AlbumNameEncoder()),
                                                          ('scaling',
                                                           StandardScaler())],
 'preprocessing__transformation__album_encoding__verbose': False,
 'preprocessing__transformation__artist_encoding': Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_encoding__encoding': FrequencyEncoder(),
 'preprocessing__transformation__artist_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__artist_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__artist_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__artist_encoding__imputation__copy': True,
 'preprocessing__transformation__artist_encoding__imputation__fill_value': None,
 'preprocessing__transformation__artist_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__artist_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__artist_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__artist_encoding__memory': None,
 'preprocessing__transformation__artist_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_encoding__steps': [('encoding',
                                                            FrequencyEncoder()),
                                                           ('imputation',
                                                            SimpleImputer()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__artist_encoding__verbose': False,
 'preprocessing__transformation__artist_popularity_encoding': Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_popularity_encoding__encoding': ArtistPopularityEncoder(),
 'preprocessing__transformation__artist_popularity_encoding__encoding__strategy': 'both',
 'preprocessing__transformation__artist_popularity_encoding__memory': None,
 'preprocessing__transformation__artist_popularity_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_popularity_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_popularity_encoding__steps': [('encoding',
                                                                       ArtistPopularityEncoder()),
                                                                      ('scaling',
                                                                       StandardScaler())],
 'preprocessing__transformation__artist_popularity_encoding__verbose': False,
 'preprocessing__transformation__follower_encoding': Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__follower_encoding__encoding': FollowerCountEncoder(),
 'preprocessing__transformation__follower_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__follower_encoding__memory': None,
 'preprocessing__transformation__follower_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__follower_encoding__scaling__copy': True,
 'preprocessing__transformation__follower_encoding__scaling__with_mean': True,
 'preprocessing__transformation__follower_encoding__scaling__with_std': True,
 'preprocessing__transformation__follower_encoding__steps': [('encoding',
                                                              FollowerCountEncoder()),
                                                             ('scaling',
                                                              StandardScaler())],
 'preprocessing__transformation__follower_encoding__verbose': False,
 'preprocessing__transformation__force_int_remainder_cols': True,
 'preprocessing__transformation__genres_encoding': Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
 'preprocessing__transformation__genres_encoding__encoding': GenreEncoder(),
 'preprocessing__transformation__genres_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__genres_encoding__memory': None,
 'preprocessing__transformation__genres_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__genres_encoding__scaling__copy': True,
 'preprocessing__transformation__genres_encoding__scaling__with_mean': True,
 'preprocessing__transformation__genres_encoding__scaling__with_std': True,
 'preprocessing__transformation__genres_encoding__steps': [('encoding',
                                                            GenreEncoder()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__genres_encoding__verbose': False,
 'preprocessing__transformation__n_jobs': None,
 'preprocessing__transformation__numeric_processing': Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__numeric_processing__imputation': SimpleImputer(),
 'preprocessing__transformation__numeric_processing__imputation__add_indicator': False,
 'preprocessing__transformation__numeric_processing__imputation__copy': True,
 'preprocessing__transformation__numeric_processing__imputation__fill_value': None,
 'preprocessing__transformation__numeric_processing__imputation__keep_empty_features': False,
 'preprocessing__transformation__numeric_processing__imputation__missing_values': nan,
 'preprocessing__transformation__numeric_processing__imputation__strategy': 'mean',
 'preprocessing__transformation__numeric_processing__memory': None,
 'preprocessing__transformation__numeric_processing__polynomials': PolynomialFeatures(),
 'preprocessing__transformation__numeric_processing__polynomials__degree': 2,
 'preprocessing__transformation__numeric_processing__polynomials__include_bias': True,
 'preprocessing__transformation__numeric_processing__polynomials__interaction_only': False,
 'preprocessing__transformation__numeric_processing__polynomials__order': 'C',
 'preprocessing__transformation__numeric_processing__scaling': StandardScaler(),
 'preprocessing__transformation__numeric_processing__scaling__copy': True,
 'preprocessing__transformation__numeric_processing__scaling__with_mean': True,
 'preprocessing__transformation__numeric_processing__scaling__with_std': True,
 'preprocessing__transformation__numeric_processing__steps': [('imputation',
                                                               SimpleImputer()),
                                                              ('polynomials',
                                                               PolynomialFeatures()),
                                                              ('scaling',
                                                               StandardScaler())],
 'preprocessing__transformation__numeric_processing__verbose': False,
 'preprocessing__transformation__onehot_encoding': OneHotEncoder(sparse_output=False),
 'preprocessing__transformation__onehot_encoding__categories': 'auto',
 'preprocessing__transformation__onehot_encoding__drop': None,
 'preprocessing__transformation__onehot_encoding__dtype': <class 'numpy.float64'>,
 'preprocessing__transformation__onehot_encoding__feature_name_combiner': 'concat',
 'preprocessing__transformation__onehot_encoding__handle_unknown': 'error',
 'preprocessing__transformation__onehot_encoding__max_categories': None,
 'preprocessing__transformation__onehot_encoding__min_frequency': None,
 'preprocessing__transformation__onehot_encoding__sparse_output': False,
 'preprocessing__transformation__remainder': 'drop',
 'preprocessing__transformation__sparse_threshold': 0.3,
 'preprocessing__transformation__transformer_weights': None,
 'preprocessing__transformation__transformers': [('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
                                                  ['key']),
                                                 ('artist_encoding',
                                                  Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
                                                  ['artist_name']),
                                                 ('album_encoding',
                                                  Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['album_name']),
                                                 ('follower_encoding',
                                                  Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_followers']),
                                                 ('genres_encoding',
                                                  Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
                                                  ['artist_genres']),
                                                 ('artist_popularity_encoding',
                                                  Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures()),
                ('scaling', StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms',
                                                   'energy',
                                                   'instrumentalness',
                                                   'liveness',
                                                   'loudness',
                                                   'speechiness',
                                                   'tempo',
                                                   'time_signature',
                                                   'valence',
                                                   'year'])],
 'preprocessing__transformation__trigonometric_encoding': Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
 'preprocessing__transformation__trigonometric_encoding__encoding': CircleOfFifthsEncoding(),
 'preprocessing__transformation__trigonometric_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__trigonometric_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__copy': True,
 'preprocessing__transformation__trigonometric_encoding__imputation__fill_value': None,
 'preprocessing__transformation__trigonometric_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__trigonometric_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__trigonometric_encoding__memory': None,
 'preprocessing__transformation__trigonometric_encoding__steps': [('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   SimpleImputer())],
 'preprocessing__transformation__trigonometric_encoding__verbose': False,
 'preprocessing__transformation__verbose': False,
 'preprocessing__transformation__verbose_feature_names_out': True,
 'preprocessing__verbose': False,
 'steps': [('preprocessing',
            Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures()),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))])),
           ('model', Ridge(alpha=0.0019630406500402726))],
 'verbose': False}

Lasso Regression:
{'memory': None,
 'model': Lasso(alpha=0.0003053855508833416),
 'model__alpha': 0.0003053855508833416,
 'model__copy_X': True,
 'model__fit_intercept': True,
 'model__max_iter': 1000,
 'model__positive': False,
 'model__precompute': False,
 'model__random_state': None,
 'model__selection': 'cyclic',
 'model__tol': 0.0001,
 'model__warm_start': False,
 'preprocessing': Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures()),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))]),
 'preprocessing__memory': None,
 'preprocessing__null_values': ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence']),
 'preprocessing__null_values__columns': ['acousticness',
                                         'danceability',
                                         'energy',
                                         'liveness',
                                         'speechiness',
                                         'tempo',
                                         'valence'],
 'preprocessing__null_values__input_value': -1,
 'preprocessing__null_values__output_value': nan,
 'preprocessing__steps': [('null_values',
                           ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence'])),
                          ('transformation',
                           ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures()),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]))],
 'preprocessing__transformation': ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures()),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]),
 'preprocessing__transformation__album_encoding': Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__album_encoding__encoding': AlbumNameEncoder(),
 'preprocessing__transformation__album_encoding__memory': None,
 'preprocessing__transformation__album_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__album_encoding__scaling__copy': True,
 'preprocessing__transformation__album_encoding__scaling__with_mean': True,
 'preprocessing__transformation__album_encoding__scaling__with_std': True,
 'preprocessing__transformation__album_encoding__steps': [('encoding',
                                                           AlbumNameEncoder()),
                                                          ('scaling',
                                                           StandardScaler())],
 'preprocessing__transformation__album_encoding__verbose': False,
 'preprocessing__transformation__artist_encoding': Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_encoding__encoding': FrequencyEncoder(),
 'preprocessing__transformation__artist_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__artist_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__artist_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__artist_encoding__imputation__copy': True,
 'preprocessing__transformation__artist_encoding__imputation__fill_value': None,
 'preprocessing__transformation__artist_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__artist_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__artist_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__artist_encoding__memory': None,
 'preprocessing__transformation__artist_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_encoding__steps': [('encoding',
                                                            FrequencyEncoder()),
                                                           ('imputation',
                                                            SimpleImputer()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__artist_encoding__verbose': False,
 'preprocessing__transformation__artist_popularity_encoding': Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_popularity_encoding__encoding': ArtistPopularityEncoder(),
 'preprocessing__transformation__artist_popularity_encoding__encoding__strategy': 'both',
 'preprocessing__transformation__artist_popularity_encoding__memory': None,
 'preprocessing__transformation__artist_popularity_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_popularity_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_popularity_encoding__steps': [('encoding',
                                                                       ArtistPopularityEncoder()),
                                                                      ('scaling',
                                                                       StandardScaler())],
 'preprocessing__transformation__artist_popularity_encoding__verbose': False,
 'preprocessing__transformation__follower_encoding': Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__follower_encoding__encoding': FollowerCountEncoder(),
 'preprocessing__transformation__follower_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__follower_encoding__memory': None,
 'preprocessing__transformation__follower_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__follower_encoding__scaling__copy': True,
 'preprocessing__transformation__follower_encoding__scaling__with_mean': True,
 'preprocessing__transformation__follower_encoding__scaling__with_std': True,
 'preprocessing__transformation__follower_encoding__steps': [('encoding',
                                                              FollowerCountEncoder()),
                                                             ('scaling',
                                                              StandardScaler())],
 'preprocessing__transformation__follower_encoding__verbose': False,
 'preprocessing__transformation__force_int_remainder_cols': True,
 'preprocessing__transformation__genres_encoding': Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
 'preprocessing__transformation__genres_encoding__encoding': GenreEncoder(),
 'preprocessing__transformation__genres_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__genres_encoding__memory': None,
 'preprocessing__transformation__genres_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__genres_encoding__scaling__copy': True,
 'preprocessing__transformation__genres_encoding__scaling__with_mean': True,
 'preprocessing__transformation__genres_encoding__scaling__with_std': True,
 'preprocessing__transformation__genres_encoding__steps': [('encoding',
                                                            GenreEncoder()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__genres_encoding__verbose': False,
 'preprocessing__transformation__n_jobs': None,
 'preprocessing__transformation__numeric_processing': Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__numeric_processing__imputation': SimpleImputer(),
 'preprocessing__transformation__numeric_processing__imputation__add_indicator': False,
 'preprocessing__transformation__numeric_processing__imputation__copy': True,
 'preprocessing__transformation__numeric_processing__imputation__fill_value': None,
 'preprocessing__transformation__numeric_processing__imputation__keep_empty_features': False,
 'preprocessing__transformation__numeric_processing__imputation__missing_values': nan,
 'preprocessing__transformation__numeric_processing__imputation__strategy': 'mean',
 'preprocessing__transformation__numeric_processing__memory': None,
 'preprocessing__transformation__numeric_processing__polynomials': PolynomialFeatures(),
 'preprocessing__transformation__numeric_processing__polynomials__degree': 2,
 'preprocessing__transformation__numeric_processing__polynomials__include_bias': True,
 'preprocessing__transformation__numeric_processing__polynomials__interaction_only': False,
 'preprocessing__transformation__numeric_processing__polynomials__order': 'C',
 'preprocessing__transformation__numeric_processing__scaling': StandardScaler(),
 'preprocessing__transformation__numeric_processing__scaling__copy': True,
 'preprocessing__transformation__numeric_processing__scaling__with_mean': True,
 'preprocessing__transformation__numeric_processing__scaling__with_std': True,
 'preprocessing__transformation__numeric_processing__steps': [('imputation',
                                                               SimpleImputer()),
                                                              ('polynomials',
                                                               PolynomialFeatures()),
                                                              ('scaling',
                                                               StandardScaler())],
 'preprocessing__transformation__numeric_processing__verbose': False,
 'preprocessing__transformation__onehot_encoding': OneHotEncoder(sparse_output=False),
 'preprocessing__transformation__onehot_encoding__categories': 'auto',
 'preprocessing__transformation__onehot_encoding__drop': None,
 'preprocessing__transformation__onehot_encoding__dtype': <class 'numpy.float64'>,
 'preprocessing__transformation__onehot_encoding__feature_name_combiner': 'concat',
 'preprocessing__transformation__onehot_encoding__handle_unknown': 'error',
 'preprocessing__transformation__onehot_encoding__max_categories': None,
 'preprocessing__transformation__onehot_encoding__min_frequency': None,
 'preprocessing__transformation__onehot_encoding__sparse_output': False,
 'preprocessing__transformation__remainder': 'drop',
 'preprocessing__transformation__sparse_threshold': 0.3,
 'preprocessing__transformation__transformer_weights': None,
 'preprocessing__transformation__transformers': [('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
                                                  ['key']),
                                                 ('artist_encoding',
                                                  Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
                                                  ['artist_name']),
                                                 ('album_encoding',
                                                  Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['album_name']),
                                                 ('follower_encoding',
                                                  Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_followers']),
                                                 ('genres_encoding',
                                                  Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
                                                  ['artist_genres']),
                                                 ('artist_popularity_encoding',
                                                  Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures()),
                ('scaling', StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms',
                                                   'energy',
                                                   'instrumentalness',
                                                   'liveness',
                                                   'loudness',
                                                   'speechiness',
                                                   'tempo',
                                                   'time_signature',
                                                   'valence',
                                                   'year'])],
 'preprocessing__transformation__trigonometric_encoding': Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
 'preprocessing__transformation__trigonometric_encoding__encoding': CircleOfFifthsEncoding(),
 'preprocessing__transformation__trigonometric_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__trigonometric_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__copy': True,
 'preprocessing__transformation__trigonometric_encoding__imputation__fill_value': None,
 'preprocessing__transformation__trigonometric_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__trigonometric_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__trigonometric_encoding__memory': None,
 'preprocessing__transformation__trigonometric_encoding__steps': [('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   SimpleImputer())],
 'preprocessing__transformation__trigonometric_encoding__verbose': False,
 'preprocessing__transformation__verbose': False,
 'preprocessing__transformation__verbose_feature_names_out': True,
 'preprocessing__verbose': False,
 'steps': [('preprocessing',
            Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures()),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))])),
           ('model', Lasso(alpha=0.0003053855508833416))],
 'verbose': False}

Ensemble Models:
--------------------------------------------------

XGBoost Regressor:
{'memory': None,
 'model': XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=1.0, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=10, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=200, n_jobs=None,
             num_parallel_tree=None, random_state=None, ...),
 'model__base_score': None,
 'model__booster': None,
 'model__callbacks': None,
 'model__colsample_bylevel': None,
 'model__colsample_bynode': None,
 'model__colsample_bytree': 1.0,
 'model__device': None,
 'model__early_stopping_rounds': None,
 'model__enable_categorical': False,
 'model__eval_metric': None,
 'model__feature_types': None,
 'model__gamma': None,
 'model__grow_policy': None,
 'model__importance_type': None,
 'model__interaction_constraints': None,
 'model__learning_rate': 0.1,
 'model__max_bin': None,
 'model__max_cat_threshold': None,
 'model__max_cat_to_onehot': None,
 'model__max_delta_step': None,
 'model__max_depth': 7,
 'model__max_leaves': None,
 'model__min_child_weight': 10,
 'model__missing': nan,
 'model__monotone_constraints': None,
 'model__multi_strategy': None,
 'model__n_estimators': 200,
 'model__n_jobs': None,
 'model__num_parallel_tree': None,
 'model__objective': 'reg:squarederror',
 'model__random_state': None,
 'model__reg_alpha': 0.1,
 'model__reg_lambda': 1,
 'model__sampling_method': None,
 'model__scale_pos_weight': None,
 'model__subsample': 0.8,
 'model__tree_method': 'gpu_hist',
 'model__validate_parameters': None,
 'model__verbosity': 2,
 'preprocessing': Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures(degree=1)),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))]),
 'preprocessing__memory': None,
 'preprocessing__null_values': ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence']),
 'preprocessing__null_values__columns': ['acousticness',
                                         'danceability',
                                         'energy',
                                         'liveness',
                                         'speechiness',
                                         'tempo',
                                         'valence'],
 'preprocessing__null_values__input_value': -1,
 'preprocessing__null_values__output_value': nan,
 'preprocessing__steps': [('null_values',
                           ConvertNull(columns=['acousticness', 'danceability', 'energy', 'liveness',
                     'speechiness', 'tempo', 'valence'])),
                          ('transformation',
                           ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures(degree=1)),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]))],
 'preprocessing__transformation': ColumnTransformer(transformers=[('onehot_encoding',
                                 OneHotEncoder(sparse_output=False),
                                 ['language']),
                                ('trigonometric_encoding',
                                 Pipeline(steps=[('encoding',
                                                  CircleOfFifthsEncoding()),
                                                 ('imputation',
                                                  SimpleImputer())]),
                                 ['key']),
                                ('artist_encoding',
                                 Pipeline(steps=[('encoding',
                                                  FrequencyEncoder()),
                                                 ('imputation',
                                                  SimpleImputer()),
                                                 ('scaling',
                                                  StandardScaler())])...
                                 ['artist_popularities']),
                                ('numeric_processing',
                                 Pipeline(steps=[('imputation',
                                                  SimpleImputer()),
                                                 ('polynomials',
                                                  PolynomialFeatures(degree=1)),
                                                 ('scaling',
                                                  StandardScaler())]),
                                 ['acousticness', 'artist_count',
                                  'avg_artist_popularity', 'danceability',
                                  'duration_ms', 'energy', 'instrumentalness',
                                  'liveness', 'loudness', 'speechiness',
                                  'tempo', 'time_signature', 'valence',
                                  'year'])]),
 'preprocessing__transformation__album_encoding': Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__album_encoding__encoding': AlbumNameEncoder(),
 'preprocessing__transformation__album_encoding__memory': None,
 'preprocessing__transformation__album_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__album_encoding__scaling__copy': True,
 'preprocessing__transformation__album_encoding__scaling__with_mean': True,
 'preprocessing__transformation__album_encoding__scaling__with_std': True,
 'preprocessing__transformation__album_encoding__steps': [('encoding',
                                                           AlbumNameEncoder()),
                                                          ('scaling',
                                                           StandardScaler())],
 'preprocessing__transformation__album_encoding__verbose': False,
 'preprocessing__transformation__artist_encoding': Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_encoding__encoding': FrequencyEncoder(),
 'preprocessing__transformation__artist_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__artist_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__artist_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__artist_encoding__imputation__copy': True,
 'preprocessing__transformation__artist_encoding__imputation__fill_value': None,
 'preprocessing__transformation__artist_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__artist_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__artist_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__artist_encoding__memory': None,
 'preprocessing__transformation__artist_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_encoding__steps': [('encoding',
                                                            FrequencyEncoder()),
                                                           ('imputation',
                                                            SimpleImputer()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__artist_encoding__verbose': False,
 'preprocessing__transformation__artist_popularity_encoding': Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__artist_popularity_encoding__encoding': ArtistPopularityEncoder(),
 'preprocessing__transformation__artist_popularity_encoding__encoding__strategy': 'both',
 'preprocessing__transformation__artist_popularity_encoding__memory': None,
 'preprocessing__transformation__artist_popularity_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__artist_popularity_encoding__scaling__copy': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_mean': True,
 'preprocessing__transformation__artist_popularity_encoding__scaling__with_std': True,
 'preprocessing__transformation__artist_popularity_encoding__steps': [('encoding',
                                                                       ArtistPopularityEncoder()),
                                                                      ('scaling',
                                                                       StandardScaler())],
 'preprocessing__transformation__artist_popularity_encoding__verbose': False,
 'preprocessing__transformation__follower_encoding': Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__follower_encoding__encoding': FollowerCountEncoder(),
 'preprocessing__transformation__follower_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__follower_encoding__memory': None,
 'preprocessing__transformation__follower_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__follower_encoding__scaling__copy': True,
 'preprocessing__transformation__follower_encoding__scaling__with_mean': True,
 'preprocessing__transformation__follower_encoding__scaling__with_std': True,
 'preprocessing__transformation__follower_encoding__steps': [('encoding',
                                                              FollowerCountEncoder()),
                                                             ('scaling',
                                                              StandardScaler())],
 'preprocessing__transformation__follower_encoding__verbose': False,
 'preprocessing__transformation__force_int_remainder_cols': True,
 'preprocessing__transformation__genres_encoding': Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
 'preprocessing__transformation__genres_encoding__encoding': GenreEncoder(),
 'preprocessing__transformation__genres_encoding__encoding__strategy': 'max',
 'preprocessing__transformation__genres_encoding__memory': None,
 'preprocessing__transformation__genres_encoding__scaling': StandardScaler(),
 'preprocessing__transformation__genres_encoding__scaling__copy': True,
 'preprocessing__transformation__genres_encoding__scaling__with_mean': True,
 'preprocessing__transformation__genres_encoding__scaling__with_std': True,
 'preprocessing__transformation__genres_encoding__steps': [('encoding',
                                                            GenreEncoder()),
                                                           ('scaling',
                                                            StandardScaler())],
 'preprocessing__transformation__genres_encoding__verbose': False,
 'preprocessing__transformation__n_jobs': None,
 'preprocessing__transformation__numeric_processing': Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures(degree=1)),
                ('scaling', StandardScaler())]),
 'preprocessing__transformation__numeric_processing__imputation': SimpleImputer(),
 'preprocessing__transformation__numeric_processing__imputation__add_indicator': False,
 'preprocessing__transformation__numeric_processing__imputation__copy': True,
 'preprocessing__transformation__numeric_processing__imputation__fill_value': None,
 'preprocessing__transformation__numeric_processing__imputation__keep_empty_features': False,
 'preprocessing__transformation__numeric_processing__imputation__missing_values': nan,
 'preprocessing__transformation__numeric_processing__imputation__strategy': 'mean',
 'preprocessing__transformation__numeric_processing__memory': None,
 'preprocessing__transformation__numeric_processing__polynomials': PolynomialFeatures(degree=1),
 'preprocessing__transformation__numeric_processing__polynomials__degree': 1,
 'preprocessing__transformation__numeric_processing__polynomials__include_bias': True,
 'preprocessing__transformation__numeric_processing__polynomials__interaction_only': False,
 'preprocessing__transformation__numeric_processing__polynomials__order': 'C',
 'preprocessing__transformation__numeric_processing__scaling': StandardScaler(),
 'preprocessing__transformation__numeric_processing__scaling__copy': True,
 'preprocessing__transformation__numeric_processing__scaling__with_mean': True,
 'preprocessing__transformation__numeric_processing__scaling__with_std': True,
 'preprocessing__transformation__numeric_processing__steps': [('imputation',
                                                               SimpleImputer()),
                                                              ('polynomials',
                                                               PolynomialFeatures(degree=1)),
                                                              ('scaling',
                                                               StandardScaler())],
 'preprocessing__transformation__numeric_processing__verbose': False,
 'preprocessing__transformation__onehot_encoding': OneHotEncoder(sparse_output=False),
 'preprocessing__transformation__onehot_encoding__categories': 'auto',
 'preprocessing__transformation__onehot_encoding__drop': None,
 'preprocessing__transformation__onehot_encoding__dtype': <class 'numpy.float64'>,
 'preprocessing__transformation__onehot_encoding__feature_name_combiner': 'concat',
 'preprocessing__transformation__onehot_encoding__handle_unknown': 'error',
 'preprocessing__transformation__onehot_encoding__max_categories': None,
 'preprocessing__transformation__onehot_encoding__min_frequency': None,
 'preprocessing__transformation__onehot_encoding__sparse_output': False,
 'preprocessing__transformation__remainder': 'drop',
 'preprocessing__transformation__sparse_threshold': 0.3,
 'preprocessing__transformation__transformer_weights': None,
 'preprocessing__transformation__transformers': [('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
                                                  ['key']),
                                                 ('artist_encoding',
                                                  Pipeline(steps=[('encoding', FrequencyEncoder()),
                ('imputation', SimpleImputer()),
                ('scaling', StandardScaler())]),
                                                  ['artist_name']),
                                                 ('album_encoding',
                                                  Pipeline(steps=[('encoding', AlbumNameEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['album_name']),
                                                 ('follower_encoding',
                                                  Pipeline(steps=[('encoding', FollowerCountEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_followers']),
                                                 ('genres_encoding',
                                                  Pipeline(steps=[('encoding', GenreEncoder()), ('scaling', StandardScaler())]),
                                                  ['artist_genres']),
                                                 ('artist_popularity_encoding',
                                                  Pipeline(steps=[('encoding', ArtistPopularityEncoder()),
                ('scaling', StandardScaler())]),
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation', SimpleImputer()),
                ('polynomials', PolynomialFeatures(degree=1)),
                ('scaling', StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms',
                                                   'energy',
                                                   'instrumentalness',
                                                   'liveness',
                                                   'loudness',
                                                   'speechiness',
                                                   'tempo',
                                                   'time_signature',
                                                   'valence',
                                                   'year'])],
 'preprocessing__transformation__trigonometric_encoding': Pipeline(steps=[('encoding', CircleOfFifthsEncoding()),
                ('imputation', SimpleImputer())]),
 'preprocessing__transformation__trigonometric_encoding__encoding': CircleOfFifthsEncoding(),
 'preprocessing__transformation__trigonometric_encoding__imputation': SimpleImputer(),
 'preprocessing__transformation__trigonometric_encoding__imputation__add_indicator': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__copy': True,
 'preprocessing__transformation__trigonometric_encoding__imputation__fill_value': None,
 'preprocessing__transformation__trigonometric_encoding__imputation__keep_empty_features': False,
 'preprocessing__transformation__trigonometric_encoding__imputation__missing_values': nan,
 'preprocessing__transformation__trigonometric_encoding__imputation__strategy': 'mean',
 'preprocessing__transformation__trigonometric_encoding__memory': None,
 'preprocessing__transformation__trigonometric_encoding__steps': [('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   SimpleImputer())],
 'preprocessing__transformation__trigonometric_encoding__verbose': False,
 'preprocessing__transformation__verbose': False,
 'preprocessing__transformation__verbose_feature_names_out': True,
 'preprocessing__verbose': False,
 'steps': [('preprocessing',
            Pipeline(steps=[('null_values',
                 ConvertNull(columns=['acousticness', 'danceability', 'energy',
                                      'liveness', 'speechiness', 'tempo',
                                      'valence'])),
                ('transformation',
                 ColumnTransformer(transformers=[('onehot_encoding',
                                                  OneHotEncoder(sparse_output=False),
                                                  ['language']),
                                                 ('trigonometric_encoding',
                                                  Pipeline(steps=[('encoding',
                                                                   CircleOfFifthsEncoding()),
                                                                  ('imputation',
                                                                   S...
                                                  ['artist_popularities']),
                                                 ('numeric_processing',
                                                  Pipeline(steps=[('imputation',
                                                                   SimpleImputer()),
                                                                  ('polynomials',
                                                                   PolynomialFeatures(degree=1)),
                                                                  ('scaling',
                                                                   StandardScaler())]),
                                                  ['acousticness',
                                                   'artist_count',
                                                   'avg_artist_popularity',
                                                   'danceability',
                                                   'duration_ms', 'energy',
                                                   'instrumentalness',
                                                   'liveness', 'loudness',
                                                   'speechiness', 'tempo',
                                                   'time_signature', 'valence',
                                                   'year'])]))])),
           ('model',
            XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=1.0, device=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=7, max_leaves=None,
             min_child_weight=10, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=200, n_jobs=None,
             num_parallel_tree=None, random_state=None, ...))],
 'verbose': False}
